name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run lint check
      run: npm run lint || echo "No lint script found, skipping..."
    
    - name: Run type check
      run: npm run type-check || echo "No type-check script found, skipping..."
    
    - name: Run tests
      run: npm test || echo "No test script found, skipping..."

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Check for vulnerabilities
      run: npm audit fix --dry-run

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build || echo "No build script found, skipping..."
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          dist/
          build/
          *.js
          *.html
          *.json
          !node_modules/

  deploy-render:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      run: |
        echo "Deploying to Render..."
        echo "Render deployment is triggered by push to main branch"
        echo "Make sure your Render account is connected to this repository"

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      run: |
        echo "Deploying to Vercel..."
        echo "Vercel deployment is triggered by push to main branch"
        echo "Make sure your Vercel account is connected to this repository"

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-render, deploy-vercel]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-render.result }}" == "success" ] && [ "${{ needs.deploy-vercel.result }}" == "success" ]; then
          echo "✅ All deployments successful!"
        else
          echo "⚠️  Some deployments may have failed"
          echo "Render: ${{ needs.deploy-render.result }}"
          echo "Vercel: ${{ needs.deploy-vercel.result }}"
        fi